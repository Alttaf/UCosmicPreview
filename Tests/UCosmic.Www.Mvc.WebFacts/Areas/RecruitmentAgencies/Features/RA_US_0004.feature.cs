// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.17379
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UCosmic.Www.Mvc.Areas.RecruitmentAgencies.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RA_US_0004_ConfigureRecruitmentAgencyModuleNorificationsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RA_US_0004.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RA_US_0004 - Configure Recruitment Agency Module Norifications", "In order to ensure my office responds quickly to new recruitment agency applicati" +
                    "ons\r\nAs a recrutiment agency supervisor\r\nI want to designate one or more email a" +
                    "ddresses to receive notifications when a new recruitment agency application is s" +
                    "ubmitted", ProgrammingLanguage.CSharp, new string[] {
                        "RepsModule"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "RA_US_0004 - Configure Recruitment Agency Module Norifications")))
            {
                UCosmic.Www.Mvc.Areas.RecruitmentAgencies.Features.RA_US_0004_ConfigureRecruitmentAgencyModuleNorificationsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void RecruitmentAgencyModuleNotificationEmailsBasicEdit(string browserName, string userEmail, string establishmentId, string validEmailDomain, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Recruitment Agency Module Notification Emails Basic Edit", exampleTags);
#line 12
this.ScenarioSetup(scenarioInfo);
#line 15
    testRunner.Given(string.Format("I am using the {0} browser", browserName));
#line 18
    testRunner.When(string.Format("I sign in as \"{0}\" with password \"asdfasdf\"", userEmail));
#line 19
    testRunner.And(string.Format("I browse to the \"{0}/recruitment-agencies/configure/notifications\" url", establishmentId));
#line 20
    testRunner.Then("I should see a \"Add a new notification email\" field with textbox");
#line 21
    testRunner.And("I should see a \"Add\" button");
#line 22
    testRunner.And("I should see a message indicating that I have no emails set up");
#line 25
    testRunner.When("I click the \"Add\" button");
#line 26
    testRunner.Then("I should see an error message \"Please enter a valid email address.\" for the \"Add " +
                    "a new notification email\" field");
#line 29
    testRunner.When("I type \"invalid\" into the \"Add a new notification email\" field");
#line 30
    testRunner.And("I click the \"Add\" button");
#line 31
    testRunner.Then("I should see an error message \"Please enter a valid email address.\" for the \"Add " +
                    "a new notification email\" field");
#line 34
    testRunner.When(string.Format("I type \"recipient1@{0}\" into the \"Add a new notification email\" field", validEmailDomain));
#line 35
    testRunner.And("I click the \"Add\" button");
#line 36
    testRunner.Then(string.Format("I should see a page at the \"{0}/recruitment-agencies/configure/notifications\" url" +
                        "", establishmentId));
#line 37
    testRunner.And("I should see a temporary \"Recruitment Agency Application Notification Email has b" +
                    "een added\" feedback message");
#line 38
    testRunner.And("I should not see a message indicating that I have no emails set up");
#line 39
    testRunner.And(string.Format("I should see a list containing the email address \"recipient1@{0}\"", validEmailDomain));
#line 40
    testRunner.And(string.Format("I should see a delete icon for the email address \"recipient1@{0}\"", validEmailDomain));
#line 43
    testRunner.When(string.Format("I type \"recipient2@{0}\" into the \"Add a new notification email\" field", validEmailDomain));
#line 44
    testRunner.And("I click the \"Add\" button");
#line 45
    testRunner.Then(string.Format("I should see a page at the \"{0}/recruitment-agencies/configure/notifications\" url" +
                        "", establishmentId));
#line 46
    testRunner.And("I should see a temporary \"Recruitment Agency Application Notification Email has b" +
                    "een added\" feedback message");
#line 47
    testRunner.And("I should not see a message indicating that I have no emails set up");
#line 48
    testRunner.And(string.Format("I should see a list containing the email address \"recipient2@{0}\"", validEmailDomain));
#line 49
    testRunner.And(string.Format("I should see a delete icon for the email address \"recipient2@{0}\"", validEmailDomain));
#line 52
    testRunner.When(string.Format("I type \"recipientN@{0}\" into the \"Add a new notification email\" field", validEmailDomain));
#line 53
    testRunner.And("I click the \"Add\" button");
#line 54
    testRunner.Then(string.Format("I should see a page at the \"{0}/recruitment-agencies/configure/notifications\" url" +
                        "", establishmentId));
#line 55
    testRunner.And("I should see a temporary \"Recruitment Agency Application Notification Email has b" +
                    "een added\" feedback message");
#line 56
    testRunner.And("I should not see a message indicating that I have no emails set up");
#line 57
    testRunner.And(string.Format("I should see a list containing the email address \"recipientN@{0}\"", validEmailDomain));
#line 58
    testRunner.And(string.Format("I should see a delete icon for the email address \"recipientN@{0}\"", validEmailDomain));
#line 61
    testRunner.When(string.Format("I type \"recipientN@{0}\" into the \"Add a new notification email\" field", validEmailDomain));
#line 62
    testRunner.And("I click the \"Add\" button");
#line 63
    testRunner.Then("I should see an error message \"This email address is already set up to receive no" +
                    "tifications.\" for the \"Add a new notification email\" field");
#line 66
    testRunner.When(string.Format("I click the delete icon for the email address \"recipient1@{0}\"", validEmailDomain));
#line 67
    testRunner.Then("I should see a dialog confirming that I want to delete an email address");
#line 70
    testRunner.When("I click to cancel the deletion of the email address");
#line 71
    testRunner.Then(string.Format("I should see a list containing the email address \"recipient1@{0}\"", validEmailDomain));
#line 74
    testRunner.When(string.Format("I click the delete icon for the email address \"recipient1@{0}\"", validEmailDomain));
#line 75
    testRunner.And("I see a dialog confirming that I want to delete an email address");
#line 76
    testRunner.And("I click to accept the deletion of the email address");
#line 77
    testRunner.Then(string.Format("I should see a page at the \"{0}/recruitment-agencies/configure/notifications\" url" +
                        "", establishmentId));
#line 78
    testRunner.And("I should see a temporary \"Recruitment Agency Application Notification Email has b" +
                    "een deleted\" feedback message");
#line 79
    testRunner.And(string.Format("I should see a list not containing the email address \"recipient1@{0}\"", validEmailDomain));
#line 82
    testRunner.When(string.Format("I click the delete icon for the email address \"recipient2@{0}\"", validEmailDomain));
#line 83
    testRunner.And("I see a dialog confirming that I want to delete an email address");
#line 84
    testRunner.And("I click to accept the deletion of the email address");
#line 85
    testRunner.Then(string.Format("I should see a page at the \"{0}/recruitment-agencies/configure/notifications\" url" +
                        "", establishmentId));
#line 86
    testRunner.And("I should see a temporary \"Recruitment Agency Application Notification Email has b" +
                    "een deleted\" feedback message");
#line 87
    testRunner.And(string.Format("I should see a list not containing the email address \"recipient2@{0}\"", validEmailDomain));
#line 90
    testRunner.When(string.Format("I click the delete icon for the email address \"recipientN@{0}\"", validEmailDomain));
#line 91
    testRunner.And("I see a dialog confirming that I want to delete an email address");
#line 92
    testRunner.And("I click to accept the deletion of the email address");
#line 93
    testRunner.Then(string.Format("I should see a page at the \"{0}/recruitment-agencies/configure/notifications\" url" +
                        "", establishmentId));
#line 94
    testRunner.And("I should see a temporary \"Recruitment Agency Application Notification Email has b" +
                    "een deleted\" feedback message");
#line 95
    testRunner.And("I should not see a list of email addresses");
#line 96
    testRunner.And("I should see a message indicating that I have no emails set up");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Recruitment Agency Module Notification Emails Basic Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RA_US_0004 - Configure Recruitment Agency Module Norifications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RepsModule")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserName", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEmail", "supervisor1@uc.edu")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EstablishmentId", "www.uc.edu")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ValidEmailDomain", "uc.edu")]
        public virtual void RecruitmentAgencyModuleNotificationEmailsBasicEdit_Chrome()
        {
            this.RecruitmentAgencyModuleNotificationEmailsBasicEdit("Chrome", "supervisor1@uc.edu", "www.uc.edu", "uc.edu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Recruitment Agency Module Notification Emails Basic Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RA_US_0004 - Configure Recruitment Agency Module Norifications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RepsModule")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Firefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserName", "Firefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEmail", "supervisor1@suny.edu")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EstablishmentId", "www.suny.edu")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ValidEmailDomain", "suny.edu")]
        public virtual void RecruitmentAgencyModuleNotificationEmailsBasicEdit_Firefox()
        {
            this.RecruitmentAgencyModuleNotificationEmailsBasicEdit("Firefox", "supervisor1@suny.edu", "www.suny.edu", "suny.edu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Recruitment Agency Module Notification Emails Basic Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RA_US_0004 - Configure Recruitment Agency Module Norifications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RepsModule")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Internet Explorer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserName", "Internet Explorer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEmail", "supervisor1@napier.ac.uk")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EstablishmentId", "www.napier.ac.uk")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ValidEmailDomain", "napier.ac.uk")]
        public virtual void RecruitmentAgencyModuleNotificationEmailsBasicEdit_InternetExplorer()
        {
            this.RecruitmentAgencyModuleNotificationEmailsBasicEdit("Internet Explorer", "supervisor1@napier.ac.uk", "www.napier.ac.uk", "napier.ac.uk", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
