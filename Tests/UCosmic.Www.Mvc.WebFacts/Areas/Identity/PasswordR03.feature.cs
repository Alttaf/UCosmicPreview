// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.239
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UCosmic.Www.Mvc.Areas.Identity
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ChangePasswordsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PasswordR03.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Change Passwords", "     In order to protect access to sensitive information\r\n     As a UCosmic user\r" +
                    "\n     I want to change my password", ProgrammingLanguage.CSharp, new string[] {
                        "ChangePassword"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Change Passwords")))
            {
                UCosmic.Www.Mvc.Areas.Identity.ChangePasswordsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line 9
    testRunner.Given("I have signed in as \"any1@suny.edu\" with password \"asdfasdf\"");
#line 10
    testRunner.And("I have browsed to the \"my/profile\" url");
#line hidden
        }
        
        public virtual void MyEmailAddressEsInfoFormChangesPasswordUnsuccessfullyWithInvalidInputs(string oldPassword, string newPassword, string confirmPassword, string oldPasswordError, string newPasswordError, string confirmPasswordError, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ChangePassword01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My Email Address(es) Info form changes password unsuccessfully with invalid input" +
                    "s", @__tags);
#line 13
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 14
    testRunner.Given("I have clicked the \"Change Password\" link");
#line 15
    testRunner.And("I have seen a page at the \"me/change-password.html\" url");
#line 16
    testRunner.When(string.Format("I type \"{0}\" into the \"OldPassword\" text box on the Change Password form", oldPassword));
#line 17
    testRunner.And(string.Format("I type \"{0}\" into the \"NewPassword\" text box on the Change Password form", newPassword));
#line 18
    testRunner.And(string.Format("I type \"{0}\" into the \"ConfirmPassword\" text box on the Change Password form", confirmPassword));
#line 19
    testRunner.And("I click the \"Change Password\" button on the Change Password form");
#line 20
    testRunner.Then("I should see a page at the \"me/change-password.html\" url");
#line 21
    testRunner.And(string.Format("I should see the error message \"{0}\" for the \"OldPassword\" text box on the Change" +
                        " Password form", oldPasswordError));
#line 22
    testRunner.And(string.Format("I should see the error message \"{0}\" for the \"NewPassword\" text box on the Change" +
                        " Password form", newPasswordError));
#line 23
    testRunner.And(string.Format("I should see the error message \"{0}\" for the \"ConfirmPassword\" text box on the Ch" +
                        "ange Password form", confirmPasswordError));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("My Email Address(es) Info form changes password unsuccessfully with invalid input" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Change Passwords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OldPassword", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewPassword", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ConfirmPassword", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OldPasswordError", "Current password is required.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewPasswordError", "New password is required.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ConfirmPasswordError", "Password confirmation is required.")]
        public virtual void MyEmailAddressEsInfoFormChangesPasswordUnsuccessfullyWithInvalidInputs_Variant0()
        {
            this.MyEmailAddressEsInfoFormChangesPasswordUnsuccessfullyWithInvalidInputs("", "", "", "Current password is required.", "New password is required.", "Password confirmation is required.", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("My Email Address(es) Info form changes password unsuccessfully with invalid input" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Change Passwords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OldPassword", "asdfasdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewPassword", "asdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ConfirmPassword", "asdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OldPasswordError", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewPasswordError", "Your password must be at least 6 characters long.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ConfirmPasswordError", "")]
        public virtual void MyEmailAddressEsInfoFormChangesPasswordUnsuccessfullyWithInvalidInputs_Variant1()
        {
            this.MyEmailAddressEsInfoFormChangesPasswordUnsuccessfullyWithInvalidInputs("asdfasdf", "asdf", "asdf", "", "Your password must be at least 6 characters long.", "", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("My Email Address(es) Info form changes password unsuccessfully with invalid input" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Change Passwords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OldPassword", "asdfasdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewPassword", "abcdabcd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ConfirmPassword", "abcdabc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OldPasswordError", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewPasswordError", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ConfirmPasswordError", "The new password and confirmation password do not match.")]
        public virtual void MyEmailAddressEsInfoFormChangesPasswordUnsuccessfullyWithInvalidInputs_Variant2()
        {
            this.MyEmailAddressEsInfoFormChangesPasswordUnsuccessfullyWithInvalidInputs("asdfasdf", "abcdabcd", "abcdabc", "", "", "The new password and confirmation password do not match.", ((string[])(null)));
        }
        
        public virtual void MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingChrome(string realPassword, string tempPassword, string signInEmail, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ChangePassword02A",
                    "OnlyInChrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My Email Address(es) Info form changes password successfully with valid input usi" +
                    "ng Chrome", @__tags);
#line 32
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 33
    testRunner.Given("I have clicked the \"Change Password\" link");
#line 34
    testRunner.And("I have seen a page at the \"me/change-password.html\" url");
#line 35
    testRunner.And(string.Format("I have typed \"{0}\" into the \"OldPassword\" text box on the Change Password form", realPassword));
#line 36
    testRunner.And(string.Format("I have typed \"{0}\" into the \"NewPassword\" text box on the Change Password form", tempPassword));
#line 37
    testRunner.And(string.Format("I have typed \"{0}\" into the \"ConfirmPassword\" text box on the Change Password for" +
                        "m", tempPassword));
#line 38
    testRunner.And("I have clicked the \"Change Password\" button on the Change Password form");
#line 39
    testRunner.And("I have seen a page at the \"my/profile\" url");
#line 40
    testRunner.And("I have seen top feedback message \"Your password has been changed successfully.\"");
#line 41
    testRunner.And(string.Format("I have seen a \"{0}\" link", signInEmail));
#line 42
    testRunner.And(string.Format("I have clicked the \"{0}\" link", signInEmail));
#line 43
    testRunner.And("I have seen a \"Sign Out\" link");
#line 44
    testRunner.And("I have clicked the \"Sign Out\" link");
#line 45
    testRunner.And("I have seen a page at the \"sign-out?returnUrl=[PathVar]\" url");
#line 46
    testRunner.And(string.Format("I have typed \"{0}\" into the \"EmailAddress\" text box on the Username & Password fo" +
                        "rm", signInEmail));
#line 47
    testRunner.And(string.Format("I have typed \"{0}\" into the \"Password\" text box on the Username & Password form", tempPassword));
#line 48
    testRunner.And("I have clicked the \"Sign In\" button on the Username & Password form");
#line 49
    testRunner.And("I have seen a page at the \"my/profile\" url");
#line 50
    testRunner.And("I have clicked the \"Change Password\" link");
#line 51
    testRunner.And(string.Format("I have typed \"{0}\" into the \"OldPassword\" text box on the Change Password form", tempPassword));
#line 52
    testRunner.And(string.Format("I have typed \"{0}\" into the \"NewPassword\" text box on the Change Password form", realPassword));
#line 53
    testRunner.And(string.Format("I have typed \"{0}\" into the \"ConfirmPassword\" text box on the Change Password for" +
                        "m", realPassword));
#line 54
    testRunner.And("I have clicked the \"Change Password\" button on the Change Password form");
#line 55
    testRunner.And("I have seen a page at the \"my/profile\" url");
#line 56
    testRunner.And("I have seen top feedback message \"Your password has been changed successfully.\"");
#line 57
    testRunner.And(string.Format("I have seen a \"{0}\" link", signInEmail));
#line 58
    testRunner.And(string.Format("I have clicked the \"{0}\" link", signInEmail));
#line 59
    testRunner.And("I have seen a \"Sign Out\" link");
#line 60
    testRunner.And("I have clicked the \"Sign Out\" link");
#line 61
    testRunner.And("I have seen a page at the \"sign-out?returnUrl=[PathVar]\" url");
#line 62
    testRunner.And(string.Format("I have typed \"{0}\" into the \"EmailAddress\" text box on the Username & Password fo" +
                        "rm", signInEmail));
#line 63
    testRunner.And(string.Format("I have typed \"{0}\" into the \"Password\" text box on the Username & Password form", realPassword));
#line 64
    testRunner.When("I click the \"Sign In\" button on the Username & Password form");
#line 65
    testRunner.Then("I should see a page at the \"my/profile\" url");
#line 66
    testRunner.And(string.Format("I should see a top identity signed-in message with \"{0}\" greeting", signInEmail));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("My Email Address(es) Info form changes password successfully with valid input usi" +
            "ng Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Change Passwords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword02A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OnlyInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RealPassword", "asdfasdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TempPassword", "abcdabcd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SignInEmail", "any1@suny.edu")]
        public virtual void MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingChrome_Variant0()
        {
            this.MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingChrome("asdfasdf", "abcdabcd", "any1@suny.edu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("My Email Address(es) Info form changes password successfully with valid input usi" +
            "ng Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Change Passwords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword02A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OnlyInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RealPassword", "asdfasdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TempPassword", "Newpassword@1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SignInEmail", "any1@suny.edu")]
        public virtual void MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingChrome_Variant1()
        {
            this.MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingChrome("asdfasdf", "Newpassword@1", "any1@suny.edu", ((string[])(null)));
        }
        
        public virtual void MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingFirefox(string realPassword, string tempPassword, string signInEmail, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ChangePassword02B",
                    "OnlyInFirefox"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My Email Address(es) Info form changes password successfully with valid input usi" +
                    "ng Firefox", @__tags);
#line 74
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 75
    testRunner.Given("I have clicked the \"Change Password\" link");
#line 76
    testRunner.And("I have seen a page at the \"me/change-password.html\" url");
#line 77
    testRunner.And(string.Format("I have typed \"{0}\" into the \"OldPassword\" text box on the Change Password form", realPassword));
#line 78
    testRunner.And(string.Format("I have typed \"{0}\" into the \"NewPassword\" text box on the Change Password form", tempPassword));
#line 79
    testRunner.And(string.Format("I have typed \"{0}\" into the \"ConfirmPassword\" text box on the Change Password for" +
                        "m", tempPassword));
#line 80
    testRunner.And("I have clicked the \"Change Password\" button on the Change Password form");
#line 81
    testRunner.And("I have seen a page at the \"my/profile\" url");
#line 82
    testRunner.And("I have seen top feedback message \"Your password has been changed successfully.\"");
#line 83
    testRunner.And(string.Format("I have seen a \"{0}\" link", signInEmail));
#line 84
    testRunner.And(string.Format("I have clicked the \"{0}\" link", signInEmail));
#line 85
    testRunner.And("I have seen a \"Sign Out\" link");
#line 86
    testRunner.And("I have clicked the \"Sign Out\" link");
#line 87
    testRunner.And("I have seen a page at the \"sign-out?returnUrl=[PathVar]\" url");
#line 88
    testRunner.And(string.Format("I have typed \"{0}\" into the \"EmailAddress\" text box on the Username & Password fo" +
                        "rm", signInEmail));
#line 89
    testRunner.And(string.Format("I have typed \"{0}\" into the \"Password\" text box on the Username & Password form", tempPassword));
#line 90
    testRunner.And("I have clicked the \"Sign In\" button on the Username & Password form");
#line 91
    testRunner.And("I have seen a page at the \"my/profile\" url");
#line 92
    testRunner.And("I have clicked the \"Change Password\" link");
#line 93
    testRunner.And(string.Format("I have typed \"{0}\" into the \"OldPassword\" text box on the Change Password form", tempPassword));
#line 94
    testRunner.And(string.Format("I have typed \"{0}\" into the \"NewPassword\" text box on the Change Password form", realPassword));
#line 95
    testRunner.And(string.Format("I have typed \"{0}\" into the \"ConfirmPassword\" text box on the Change Password for" +
                        "m", realPassword));
#line 96
    testRunner.And("I have clicked the \"Change Password\" button on the Change Password form");
#line 97
    testRunner.And("I have seen a page at the \"my/profile\" url");
#line 98
    testRunner.And("I have seen top feedback message \"Your password has been changed successfully.\"");
#line 99
    testRunner.And(string.Format("I have seen a \"{0}\" link", signInEmail));
#line 100
    testRunner.And(string.Format("I have clicked the \"{0}\" link", signInEmail));
#line 101
    testRunner.And("I have seen a \"Sign Out\" link");
#line 102
    testRunner.And("I have clicked the \"Sign Out\" link");
#line 103
    testRunner.And("I have seen a page at the \"sign-out?returnUrl=[PathVar]\" url");
#line 104
    testRunner.And(string.Format("I have typed \"{0}\" into the \"EmailAddress\" text box on the Username & Password fo" +
                        "rm", signInEmail));
#line 105
    testRunner.And(string.Format("I have typed \"{0}\" into the \"Password\" text box on the Username & Password form", realPassword));
#line 106
    testRunner.When("I click the \"Sign In\" button on the Username & Password form");
#line 107
    testRunner.Then("I should see a page at the \"my/profile\" url");
#line 108
    testRunner.And(string.Format("I should see a top identity signed-in message with \"{0}\" greeting", signInEmail));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("My Email Address(es) Info form changes password successfully with valid input usi" +
            "ng Firefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Change Passwords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword02B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OnlyInFirefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RealPassword", "asdfasdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TempPassword", "abcdabcd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SignInEmail", "any1@suny.edu")]
        public virtual void MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingFirefox_Variant0()
        {
            this.MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingFirefox("asdfasdf", "abcdabcd", "any1@suny.edu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("My Email Address(es) Info form changes password successfully with valid input usi" +
            "ng Firefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Change Passwords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword02B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OnlyInFirefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RealPassword", "asdfasdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TempPassword", "Newpassword@1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SignInEmail", "any1@suny.edu")]
        public virtual void MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingFirefox_Variant1()
        {
            this.MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingFirefox("asdfasdf", "Newpassword@1", "any1@suny.edu", ((string[])(null)));
        }
        
        public virtual void MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingInternetExplorer(string realPassword, string tempPassword, string signInEmail, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ChangePassword02C",
                    "OnlyInInternetExplorer"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My Email Address(es) Info form changes password successfully with valid input usi" +
                    "ng Internet Explorer", @__tags);
#line 116
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 117
    testRunner.Given("I have clicked the \"Change Password\" link");
#line 118
    testRunner.And("I have seen a page at the \"me/change-password.html\" url");
#line 119
    testRunner.And(string.Format("I have typed \"{0}\" into the \"OldPassword\" text box on the Change Password form", realPassword));
#line 120
    testRunner.And(string.Format("I have typed \"{0}\" into the \"NewPassword\" text box on the Change Password form", tempPassword));
#line 121
    testRunner.And(string.Format("I have typed \"{0}\" into the \"ConfirmPassword\" text box on the Change Password for" +
                        "m", tempPassword));
#line 122
    testRunner.And("I have clicked the \"Change Password\" button on the Change Password form");
#line 123
    testRunner.And("I have seen a page at the \"my/profile\" url");
#line 124
    testRunner.And("I have seen top feedback message \"Your password has been changed successfully.\"");
#line 125
    testRunner.And("I have seen a \"Sign Out\" link");
#line 126
    testRunner.And("I have clicked the \"Sign Out\" link");
#line 127
    testRunner.And("I have seen a page at the \"sign-out?returnUrl=[PathVar]\" url");
#line 128
    testRunner.And(string.Format("I have typed \"{0}\" into the \"EmailAddress\" text box on the Username & Password fo" +
                        "rm", signInEmail));
#line 129
    testRunner.And(string.Format("I have typed \"{0}\" into the \"Password\" text box on the Username & Password form", tempPassword));
#line 130
    testRunner.And("I have clicked the \"Sign In\" button on the Username & Password form");
#line 131
    testRunner.And("I have seen a page at the \"my/profile\" url");
#line 132
    testRunner.And("I have seen a \"Change Password\" link");
#line 133
    testRunner.And("I have clicked the \"Change Password\" link");
#line 134
    testRunner.And(string.Format("I have typed \"{0}\" into the \"OldPassword\" text box on the Change Password form", tempPassword));
#line 135
    testRunner.And(string.Format("I have typed \"{0}\" into the \"NewPassword\" text box on the Change Password form", realPassword));
#line 136
    testRunner.And(string.Format("I have typed \"{0}\" into the \"ConfirmPassword\" text box on the Change Password for" +
                        "m", realPassword));
#line 137
    testRunner.And("I have clicked the \"Change Password\" button on the Change Password form");
#line 138
    testRunner.And("I have seen a page at the \"my/profile\" url");
#line 139
    testRunner.And("I have seen top feedback message \"Your password has been changed successfully.\"");
#line 140
    testRunner.And("I have seen a \"Sign Out\" link");
#line 141
    testRunner.And("I have clicked the \"Sign Out\" link");
#line 142
    testRunner.And("I have seen a page at the \"sign-out?returnUrl=[PathVar]\" url");
#line 143
    testRunner.And(string.Format("I have typed \"{0}\" into the \"EmailAddress\" text box on the Username & Password fo" +
                        "rm", signInEmail));
#line 144
    testRunner.And(string.Format("I have typed \"{0}\" into the \"Password\" text box on the Username & Password form", realPassword));
#line 145
    testRunner.When("I click the \"Sign In\" button on the Username & Password form");
#line 146
    testRunner.Then("I should see a page at the \"my/profile\" url");
#line 147
    testRunner.And(string.Format("I should see a top identity signed-in message with \"{0}\" greeting", signInEmail));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("My Email Address(es) Info form changes password successfully with valid input usi" +
            "ng Internet Explorer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Change Passwords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword02C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OnlyInInternetExplorer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RealPassword", "asdfasdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TempPassword", "abcdabcd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SignInEmail", "any1@suny.edu")]
        public virtual void MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingInternetExplorer_Variant0()
        {
            this.MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingInternetExplorer("asdfasdf", "abcdabcd", "any1@suny.edu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("My Email Address(es) Info form changes password successfully with valid input usi" +
            "ng Internet Explorer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Change Passwords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword02C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OnlyInInternetExplorer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RealPassword", "asdfasdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TempPassword", "Newpassword@1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SignInEmail", "any1@suny.edu")]
        public virtual void MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingInternetExplorer_Variant1()
        {
            this.MyEmailAddressEsInfoFormChangesPasswordSuccessfullyWithValidInputUsingInternetExplorer("asdfasdf", "Newpassword@1", "any1@suny.edu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("My Email Address(es) Info form displays an error if the old password is incorrect" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Change Passwords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword03")]
        public virtual void MyEmailAddressEsInfoFormDisplaysAnErrorIfTheOldPasswordIsIncorrect()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My Email Address(es) Info form displays an error if the old password is incorrect" +
                    "", new string[] {
                        "ChangePassword03"});
#line 154
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 155
    testRunner.Given("I have clicked the \"Change Password\" link");
#line 156
    testRunner.And("I have seen a page at the \"me/change-password.html\" url");
#line 157
    testRunner.When("I type \"asdfasd\" into the \"OldPassword\" text box on the Change Password form");
#line 158
    testRunner.And("I type \"abcdabcd\" into the \"NewPassword\" text box on the Change Password form");
#line 159
    testRunner.And("I type \"abcdabcd\" into the \"ConfirmPassword\" text box on the Change Password form" +
                    "");
#line 160
    testRunner.And("I click the \"Change Password\" button on the Change Password form");
#line 161
    testRunner.Then("I should see a page at the \"me/change-password.html\" url");
#line 162
    testRunner.And("I should see the validation error message \"The Old Password is incorrect.\" for th" +
                    "e \"OldPassword\" text box on the Change Password form");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("My Email Address(es) Info form successfully dismiss by clicking Cancel button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Change Passwords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ChangePassword04")]
        public virtual void MyEmailAddressEsInfoFormSuccessfullyDismissByClickingCancelButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("My Email Address(es) Info form successfully dismiss by clicking Cancel button", new string[] {
                        "ChangePassword04"});
#line 165
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 166
    testRunner.Given("I have clicked the \"Change Password\" link");
#line 167
    testRunner.And("I have seen a page at the \"me/change-password.html\" url");
#line 168
    testRunner.When("I click the \"Cancel\" button on the Change Password form");
#line 169
    testRunner.Then("I should see a page at the \"my/profile\" url");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
