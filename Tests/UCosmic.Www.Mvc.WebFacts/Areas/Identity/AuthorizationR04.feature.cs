// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.239
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UCosmic.Www.Mvc.Areas.Identity
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class UserRoleManagementFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AuthorizationR04.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "User Role Management", "     In order to control access to UCosmic features\r\n        As a Security Execut" +
                    "ive\r\n     I want to grant and revoke user role memberships", ProgrammingLanguage.CSharp, new string[] {
                        "Authorization",
                        "AuthR04"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "User Role Management")))
            {
                UCosmic.Www.Mvc.Areas.Identity.UserRoleManagementFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 9
#line 10
    testRunner.Given("I have signed in as \"agent1@uc.edu\" with password \"asdfasdf\"");
#line 11
    testRunner.And("I have browsed to the \"roles\" url");
#line hidden
        }
        
        public virtual void RoleAuthorizationFormsSuccessfullyAddMembersToListBox(string addOrEdit, string linkToForm, string memberTerm, string memberTarget, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "AuthR0403"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Role Authorization forms successfully add members to list box", @__tags);
#line 77
this.ScenarioSetup(scenarioInfo);
#line 9
this.FeatureBackground();
#line 78
   testRunner.Given(string.Format("I have clicked the \"{0}\" link", linkToForm));
#line 79
   testRunner.And(string.Format("I have seen a page at the \"roles/[PathVar]/{0}/[PathVar]\" url", addOrEdit));
#line 80
   testRunner.When(string.Format("I type \"{0}\" into the \"member_search\" text box on the Role Authorization {1} form" +
                        "", memberTerm, addOrEdit));
#line 81
   testRunner.And(string.Format("I see a \"MemberSearch\" autocomplete dropdown menu item \"{0}\"", memberTarget));
#line 82
   testRunner.And(string.Format("I click the \"MemberSearch\" autocomplete dropdown menu item \"{0}\"", memberTarget));
#line 83
   testRunner.Then(string.Format("I should see \"{0}\" in the Members list box on the Role Authorization {1} form", memberTarget, addOrEdit));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Role Authorization forms successfully add members to list box")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Role Management")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Authorization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR0403")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkToForm", "Institutional Agreement Manager")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MemberTerm", "nyb")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MemberTarget", "Debra.Nyby@lehigh.edu")]
        public virtual void RoleAuthorizationFormsSuccessfullyAddMembersToListBox_Variant0()
        {
            this.RoleAuthorizationFormsSuccessfullyAddMembersToListBox("edit", "Institutional Agreement Manager", "nyb", "Debra.Nyby@lehigh.edu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Role Authorization forms successfully add members to list box")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Role Management")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Authorization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR0403")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkToForm", "Institutional Agreement Manager")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MemberTerm", "bal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MemberTarget", "DBallen@usil.edu.pe")]
        public virtual void RoleAuthorizationFormsSuccessfullyAddMembersToListBox_Variant1()
        {
            this.RoleAuthorizationFormsSuccessfullyAddMembersToListBox("edit", "Institutional Agreement Manager", "bal", "DBallen@usil.edu.pe", ((string[])(null)));
        }
        
        public virtual void RoleAuthorizationFormsDoesNotAllowDuplicateEntriesIntoTheMembersListBox(string addOrEdit, string linkToForm, string memberTerm, string memberTarget, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "AuthR0404"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Role Authorization forms does not allow duplicate entries into the members list b" +
                    "ox", @__tags);
#line 92
this.ScenarioSetup(scenarioInfo);
#line 9
this.FeatureBackground();
#line 93
   testRunner.Given(string.Format("I have clicked the \"{0}\" link", linkToForm));
#line 94
   testRunner.And(string.Format("I have seen a page at the \"roles/[PathVar]/{0}/[PathVar]\" url", addOrEdit));
#line 95
   testRunner.And(string.Format("I have typed \"{0}\" into the \"member_search\" text box on the Role Authorization {1" +
                        "} form", memberTerm, addOrEdit));
#line 96
   testRunner.And(string.Format("I have seen a \"MemberSearch\" autocomplete dropdown menu item \"{0}\"", memberTarget));
#line 97
   testRunner.And(string.Format("I have clicked the \"MemberSearch\" autocomplete dropdown menu item \"{0}\"", memberTarget));
#line 98
   testRunner.And(string.Format("I have seen \"{0}\" in the Members list box on the Role Authorization {1} form", memberTarget, addOrEdit));
#line 99
   testRunner.When(string.Format("I type \"{0}\" into the \"member_search\" text box on the Role Authorization {1} form" +
                        "", memberTerm, addOrEdit));
#line 100
   testRunner.Then(string.Format("I should not see a \"MemberSearch\" autocomplete dropdown menu item \"{0}\"", memberTarget));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Role Authorization forms does not allow duplicate entries into the members list b" +
            "ox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Role Management")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Authorization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR0404")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkToForm", "Institutional Agreement Manager")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MemberTerm", "nyb")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MemberTarget", "Debra.Nyby@lehigh.edu")]
        public virtual void RoleAuthorizationFormsDoesNotAllowDuplicateEntriesIntoTheMembersListBox_Variant0()
        {
            this.RoleAuthorizationFormsDoesNotAllowDuplicateEntriesIntoTheMembersListBox("edit", "Institutional Agreement Manager", "nyb", "Debra.Nyby@lehigh.edu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Role Authorization forms does not allow duplicate entries into the members list b" +
            "ox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Role Management")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Authorization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR0404")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkToForm", "Institutional Agreement Manager")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MemberTerm", "bal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MemberTarget", "DBallen@usil.edu.pe")]
        public virtual void RoleAuthorizationFormsDoesNotAllowDuplicateEntriesIntoTheMembersListBox_Variant1()
        {
            this.RoleAuthorizationFormsDoesNotAllowDuplicateEntriesIntoTheMembersListBox("edit", "Institutional Agreement Manager", "bal", "DBallen@usil.edu.pe", ((string[])(null)));
        }
        
        public virtual void RoleAuthorizationFormsSuccessfullyDismissByClickingCancelButton(string addOrEdit, string linkToForm, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "AuthR0405"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Role Authorization forms successfully dismiss by clicking Cancel button", @__tags);
#line 109
this.ScenarioSetup(scenarioInfo);
#line 9
this.FeatureBackground();
#line 110
   testRunner.Given(string.Format("I have clicked the \"{0}\" link", linkToForm));
#line 111
   testRunner.And(string.Format("I have seen a page at the \"roles/[PathVar]/{0}/[PathVar]\" url", addOrEdit));
#line 112
   testRunner.When(string.Format("I click the cancel link on the Role Authorization {0} form", addOrEdit));
#line 113
   testRunner.Then("I should see a page at the \"roles\" url");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Role Authorization forms successfully dismiss by clicking Cancel button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Role Management")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Authorization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR0405")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkToForm", "Institutional Agreement Manager")]
        public virtual void RoleAuthorizationFormsSuccessfullyDismissByClickingCancelButton_Edit()
        {
            this.RoleAuthorizationFormsSuccessfullyDismissByClickingCancelButton("edit", "Institutional Agreement Manager", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Edit Role Authorization form does not allow role name to be changed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Role Management")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Authorization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR0406")]
        public virtual void EditRoleAuthorizationFormDoesNotAllowRoleNameToBeChanged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Role Authorization form does not allow role name to be changed", new string[] {
                        "AuthR0406"});
#line 120
this.ScenarioSetup(scenarioInfo);
#line 9
this.FeatureBackground();
#line 121
   testRunner.Given("I have clicked the \"Institutional Agreement Manager\" link");
#line 122
   testRunner.When("I see a page at the \"roles/[PathVar]/edit/[PathVar]\" url");
#line 123
   testRunner.Then("I should see a readonly hidden textbox for field \"Role name\" on the Role Authoriz" +
                    "ation Edit form");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Edit Role Authorization form unsuccessfully submit with empty required field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Role Management")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Authorization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AuthR0407")]
        public virtual void EditRoleAuthorizationFormUnsuccessfullySubmitWithEmptyRequiredField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Role Authorization form unsuccessfully submit with empty required field", new string[] {
                        "AuthR0407"});
#line 126
this.ScenarioSetup(scenarioInfo);
#line 9
this.FeatureBackground();
#line 127
   testRunner.Given("I have clicked the \"Institutional Agreement Manager\" link");
#line 128
   testRunner.And("I have seen a page at the \"roles/[PathVar]/edit/[PathVar]\" url");
#line 129
   testRunner.When("I type \"\" into the \"Description\" text box on the Role Authorization edit form");
#line 130
   testRunner.And("I click the \"Save Changes\" submit button on the Role Authorization edit form");
#line 131
   testRunner.Then("I should see a page at the \"roles/[PathVar]/edit/[PathVar]\" url");
#line 132
   testRunner.And("I should see the error message \"Description is required.\" for the \"Description\" t" +
                    "ext box on the Role Authorization edit form");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
