// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.17379
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UCosmic.Www.Mvc.Areas.InstitutionalAgreements
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ConfigureInstitutionalAgreementsModuleAgreementTypesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ConfigureAgreementTypes.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Configure Institutional Agreements Module Agreement Types", "  In order to control agreement type designation at my institution\r\n  As an Insti" +
                    "tutional Agreement Manager\r\n  I want to manage the drop down options and behavio" +
                    "r of the agreement type field", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Configure Institutional Agreements Module Agreement Types")))
            {
                UCosmic.Www.Mvc.Areas.InstitutionalAgreements.ConfigureInstitutionalAgreementsModuleAgreementTypesFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 8
    testRunner.Given("I am signed in as supervisor1@uc.edu");
#line 9
    testRunner.And("I am starting from the Institutional Agreement Management page");
#line 10
    testRunner.Then("I should see a \"Configure module\" link");
#line 12
    testRunner.When("I click the \"Configure module\" link");
#line 13
    testRunner.Then("I should see the Institutional Agreement Configure Module page");
#line 14
    testRunner.And("I should see a \"Click here to set it up now\" link");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add item to Agreement Types list fails when text is empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        public virtual void AddItemToAgreementTypesListFailsWhenTextIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add item to Agreement Types list fails when text is empty", ((string[])(null)));
#line 16
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 18
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 19
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 20
    testRunner.And("I should see an \"Add\" link for item #1 in the Agreement Types list");
#line 22
    testRunner.When("I click the \"Add\" link for item #1 in the Agreement Types list");
#line 23
    testRunner.Then("I should see an Agreement Type text field for item #1 in the Agreement Types list" +
                    "");
#line 25
    testRunner.When("I click the \"Add\" link for item #1 in the Agreement Types list again");
#line 26
    testRunner.Then("I should see the Required error message for the Agreement Type text field");
#line 28
    testRunner.When("I click the \"Create Configuration\" submit button");
#line 29
    testRunner.Then("I should still see the Institutional Agreement Set Up Module page");
#line 30
    testRunner.And("I should still see the Required error message for the Agreement Type text field");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AddItemToAgreementTypesListFailsWhenTextIsDuplicate(string duplicateValue, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add item to Agreement Types list fails when text is duplicate", exampleTags);
#line 32
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 34
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 35
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 36
    testRunner.And("I should see an \"Add\" link for item #1 in the Agreement Types list");
#line 38
    testRunner.When("I click the \"Add\" link for item #1 in the Agreement Types list");
#line 39
    testRunner.Then("I should see an Agreement Type text field for item #1 in the Agreement Types list" +
                    "");
#line 41
    testRunner.When(string.Format("I type \"{0}\" into the Agreement Type text field for item #1 in the Agreement Type" +
                        "s list", duplicateValue));
#line 42
    testRunner.And("I click the \"Add\" link for item #1 in the Agreement Types list again");
#line 43
    testRunner.Then("I should still see the Institutional Agreement Set Up Module page");
#line 44
    testRunner.And(string.Format("I should see the \'{0} is a Duplicate\' error message for the Agreement Type text f" +
                        "ield", duplicateValue));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add item to Agreement Types list fails when text is duplicate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Activity Agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DuplicateValue", "Activity Agreement")]
        public virtual void AddItemToAgreementTypesListFailsWhenTextIsDuplicate_ActivityAgreement()
        {
            this.AddItemToAgreementTypesListFailsWhenTextIsDuplicate("Activity Agreement", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add item to Agreement Types list fails when text is duplicate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Institutional Collaboration Agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DuplicateValue", "Institutional Collaboration Agreement")]
        public virtual void AddItemToAgreementTypesListFailsWhenTextIsDuplicate_InstitutionalCollaborationAgreement()
        {
            this.AddItemToAgreementTypesListFailsWhenTextIsDuplicate("Institutional Collaboration Agreement", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add item to Agreement Types list fails when text is duplicate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Memorandum of Understanding")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DuplicateValue", "Memorandum of Understanding")]
        public virtual void AddItemToAgreementTypesListFailsWhenTextIsDuplicate_MemorandumOfUnderstanding()
        {
            this.AddItemToAgreementTypesListFailsWhenTextIsDuplicate("Memorandum of Understanding", ((string[])(null)));
        }
        
        public virtual void AddItemToAgreementTypesListCausesAutomaticAlphabetization(string newItemText, string newItemNumber, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add item to Agreement Types list causes automatic alphabetization", exampleTags);
#line 52
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 54
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 55
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 56
    testRunner.And("I should see an \"Add\" link for item #1 in the Agreement Types list");
#line 58
    testRunner.When("I click the \"Add\" link for item #1 in the Agreement Types list");
#line 59
    testRunner.Then("I should see an Agreement Type text field for item #1 in the Agreement Types list" +
                    "");
#line 61
    testRunner.When(string.Format("I type \"{0}\" into the Agreement Type text field for item #1 in the Agreement Type" +
                        "s list", newItemText));
#line 62
    testRunner.And("I click the \"Add\" link for item #1 in the Agreement Types list again");
#line 63
    testRunner.Then(string.Format("I should see an item for \"{0}\" in the Agreement Types list", newItemText));
#line 64
    testRunner.And(string.Format("I should see a \"Remove\" link for item #{0} in the Agreement Types list", newItemNumber));
#line 66
    testRunner.When(string.Format("I click the \"Remove\" link for item #{0} in the Agreement Types list", newItemNumber));
#line 67
    testRunner.Then(string.Format("I shouldn\'t see an item for \"{0}\" in the Agreement Types list", newItemText));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add item to Agreement Types list causes automatic alphabetization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "AAA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewItemText", "AAA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewItemNumber", "2")]
        public virtual void AddItemToAgreementTypesListCausesAutomaticAlphabetization_AAA()
        {
            this.AddItemToAgreementTypesListCausesAutomaticAlphabetization("AAA", "2", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add item to Agreement Types list causes automatic alphabetization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "BBB")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewItemText", "BBB")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewItemNumber", "3")]
        public virtual void AddItemToAgreementTypesListCausesAutomaticAlphabetization_BBB()
        {
            this.AddItemToAgreementTypesListCausesAutomaticAlphabetization("BBB", "3", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add item to Agreement Types list causes automatic alphabetization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "JJJ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewItemText", "JJJ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewItemNumber", "4")]
        public virtual void AddItemToAgreementTypesListCausesAutomaticAlphabetization_JJJ()
        {
            this.AddItemToAgreementTypesListCausesAutomaticAlphabetization("JJJ", "4", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add item to Agreement Types list causes automatic alphabetization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NNN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewItemText", "NNN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NewItemNumber", "5")]
        public virtual void AddItemToAgreementTypesListCausesAutomaticAlphabetization_NNN()
        {
            this.AddItemToAgreementTypesListCausesAutomaticAlphabetization("NNN", "5", ((string[])(null)));
        }
        
        public virtual void EditItemInAgreementTypesListFailsWhenTextIsEmpty(string listItemNumber, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit item in Agreement Types list fails when text is empty", exampleTags);
#line 76
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 78
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 79
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 80
    testRunner.And(string.Format("I should see an \"Edit\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 82
    testRunner.When(string.Format("I click the \"Edit\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 83
    testRunner.Then(string.Format("I should see an Agreement Type text field for item #{0} in the Agreement Types li" +
                        "st", listItemNumber));
#line 84
    testRunner.And(string.Format("I should see a \"Save\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 86
    testRunner.When(string.Format("I type \"\" into the Agreement Type text field for item #{0} in the Agreement Types" +
                        " list", listItemNumber));
#line 87
    testRunner.And(string.Format("I click the \"Save\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 88
    testRunner.Then("I should see the Required error message for the Agreement Type text field");
#line 90
    testRunner.When("I click the \"Create Configuration\" submit button");
#line 91
    testRunner.Then("I should still see the Institutional Agreement Set Up Module page");
#line 92
    testRunner.And("I should still see the Required error message for the Agreement Type text field");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Edit item in Agreement Types list fails when text is empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "2")]
        public virtual void EditItemInAgreementTypesListFailsWhenTextIsEmpty_2()
        {
            this.EditItemInAgreementTypesListFailsWhenTextIsEmpty("2", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Edit item in Agreement Types list fails when text is empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "3")]
        public virtual void EditItemInAgreementTypesListFailsWhenTextIsEmpty_3()
        {
            this.EditItemInAgreementTypesListFailsWhenTextIsEmpty("3", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Edit item in Agreement Types list fails when text is empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "4")]
        public virtual void EditItemInAgreementTypesListFailsWhenTextIsEmpty_4()
        {
            this.EditItemInAgreementTypesListFailsWhenTextIsEmpty("4", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Edit item in Agreement Types list fails when text is duplicate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        public virtual void EditItemInAgreementTypesListFailsWhenTextIsDuplicate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit item in Agreement Types list fails when text is duplicate", ((string[])(null)));
#line 100
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 102
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 103
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 104
    testRunner.And("I should see an item for \"Memorandum of Understanding\" in the Agreement Types lis" +
                    "t");
#line 105
    testRunner.And("I should see an \"Edit\" link for item #4 in the Agreement Types list");
#line 107
    testRunner.When("I click the \"Edit\" link for item #4 in the Agreement Types list");
#line 108
    testRunner.Then("I should see an Agreement Type text field for item #4 in the Agreement Types list" +
                    "");
#line 109
    testRunner.And("I should see a \"Save\" link for item #4 in the Agreement Types list");
#line 110
    testRunner.And("I should see a \"Cancel\" link for item #4 in the Agreement Types list");
#line 112
    testRunner.When("I type \"Activity Agreement\" into the Agreement Type text field for item #4 in the" +
                    " Agreement Types list");
#line 113
    testRunner.And("I click the \"Save\" link for item #4 in the Agreement Types list");
#line 114
    testRunner.Then("I should see the \'Activity Agreement is a Duplicate\' error message for the Agreem" +
                    "ent Type text field");
#line 115
    testRunner.And("I should still see a \"Cancel\" link for item #4 in the Agreement Types list");
#line 117
    testRunner.When("I click the \"Cancel\" link for item #4 in the Agreement Types list");
#line 118
    testRunner.Then("I should see an \"Edit\" link for item #4 in the Agreement Types list");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void EditItemInAgreementTypesListReplacesPreviousValue(string listItemNumber, string originalText, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit item in Agreement Types list replaces previous value", exampleTags);
#line 120
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 122
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 123
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 124
    testRunner.And(string.Format("I should see an item for \"{0}\" in the Agreement Types list", originalText));
#line 125
    testRunner.And(string.Format("I should see an \"Edit\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 127
    testRunner.When(string.Format("I click the \"Edit\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 128
    testRunner.Then(string.Format("I should see an Agreement Type text field for item #{0} in the Agreement Types li" +
                        "st", listItemNumber));
#line 129
    testRunner.And(string.Format("I should see a \"Save\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 131
    testRunner.When(string.Format("I type \"Test Value\" into the Agreement Type text field for item #{0} in the Agree" +
                        "ment Types list", listItemNumber));
#line 132
    testRunner.And(string.Format("I click the \"Save\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 133
    testRunner.Then("I should see an item for \"Test Value\" in the Agreement Types list");
#line 134
    testRunner.And(string.Format("I shouldn\'t see an item for \"{0}\" in the Agreement Types list", originalText));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Edit item in Agreement Types list replaces previous value")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginalText", "Activity Agreement")]
        public virtual void EditItemInAgreementTypesListReplacesPreviousValue_2()
        {
            this.EditItemInAgreementTypesListReplacesPreviousValue("2", "Activity Agreement", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Edit item in Agreement Types list replaces previous value")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginalText", "Institutional Collaboration Agreement")]
        public virtual void EditItemInAgreementTypesListReplacesPreviousValue_3()
        {
            this.EditItemInAgreementTypesListReplacesPreviousValue("3", "Institutional Collaboration Agreement", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Edit item in Agreement Types list replaces previous value")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginalText", "Memorandum of Understanding")]
        public virtual void EditItemInAgreementTypesListReplacesPreviousValue_4()
        {
            this.EditItemInAgreementTypesListReplacesPreviousValue("4", "Memorandum of Understanding", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Edit item in Agreement Types list causes automatic alphabetization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        public virtual void EditItemInAgreementTypesListCausesAutomaticAlphabetization()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit item in Agreement Types list causes automatic alphabetization", ((string[])(null)));
#line 142
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 144
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 145
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 146
    testRunner.And("I should see an item for \"Activity Agreement\" in the Agreement Types list");
#line 147
    testRunner.And("I should see an \"Edit\" link for item #2 in the Agreement Types list");
#line 149
    testRunner.When("I click the \"Edit\" link for item #2 in the Agreement Types list");
#line 150
    testRunner.Then("I should see an Agreement Type text field for item #2 in the Agreement Types list" +
                    "");
#line 151
    testRunner.And("I should see a \"Save\" link for item #2 in the Agreement Types list");
#line 152
    testRunner.And("I should see a \"Cancel\" link for item #2 in the Agreement Types list");
#line 154
    testRunner.When("I type \"XXX Last Agreement\" into the Agreement Type text field for item #2 in the" +
                    " Agreement Types list");
#line 155
    testRunner.And("I click the \"Save\" link for item #2 in the Agreement Types list");
#line 156
    testRunner.Then("I should see an item for \"XXX Last Agreement\" in the Agreement Types list");
#line 157
    testRunner.And("I should not see an item for \"Activity Agreement\" in the Agreement Types list");
#line 159
    testRunner.When("I click the \"Remove\" link for item #4 in the Agreement Types list");
#line 160
    testRunner.Then("I shouldn\'t see an item for \"XXX Last Agreement\" in the Agreement Types list");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CancelItemEditInAgreementTypesList(string listItemNumber, string originalText, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancel item edit in Agreement Types list", exampleTags);
#line 162
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 164
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 165
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 166
    testRunner.And(string.Format("I should see an item for \"{0}\" in the Agreement Types list", originalText));
#line 167
    testRunner.And(string.Format("I should see an \"Edit\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 169
    testRunner.When(string.Format("I click the \"Edit\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 170
    testRunner.Then(string.Format("I should see an Agreement Type text field for item #{0} in the Agreement Types li" +
                        "st", listItemNumber));
#line 171
    testRunner.And(string.Format("I should see a \"Cancel\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 173
    testRunner.When(string.Format("I type \"Agreement\" into the Agreement Type text field for item #{0} in the Agreem" +
                        "ent Types list", listItemNumber));
#line 174
    testRunner.And(string.Format("I click the \"Cancel\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 175
    testRunner.Then(string.Format("I should still see an item for \"{0}\" in the Agreement Types list", originalText));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Cancel item edit in Agreement Types list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginalText", "Activity Agreement")]
        public virtual void CancelItemEditInAgreementTypesList_2()
        {
            this.CancelItemEditInAgreementTypesList("2", "Activity Agreement", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Cancel item edit in Agreement Types list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginalText", "Institutional Collaboration Agreement")]
        public virtual void CancelItemEditInAgreementTypesList_3()
        {
            this.CancelItemEditInAgreementTypesList("3", "Institutional Collaboration Agreement", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Cancel item edit in Agreement Types list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginalText", "Memorandum of Understanding")]
        public virtual void CancelItemEditInAgreementTypesList_4()
        {
            this.CancelItemEditInAgreementTypesList("4", "Memorandum of Understanding", ((string[])(null)));
        }
        
        public virtual void RemoveItemFromAgreementTypesList(string listItemNumber, string originalText, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Remove item from Agreement Types list", exampleTags);
#line 183
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 185
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 186
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 187
    testRunner.And(string.Format("I should see a \"Remove\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 189
    testRunner.When(string.Format("I click the \"Remove\" link for item #{0} in the Agreement Types list", listItemNumber));
#line 190
    testRunner.Then(string.Format("I shouldn\'t see an item for \"{0}\" in the Agreement Types list", originalText));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Remove item from Agreement Types list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginalText", "Activity Agreement")]
        public virtual void RemoveItemFromAgreementTypesList_2()
        {
            this.RemoveItemFromAgreementTypesList("2", "Activity Agreement", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Remove item from Agreement Types list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginalText", "Institutional Collaboration Agreement")]
        public virtual void RemoveItemFromAgreementTypesList_3()
        {
            this.RemoveItemFromAgreementTypesList("3", "Institutional Collaboration Agreement", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Remove item from Agreement Types list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ListItemNumber", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OriginalText", "Memorandum of Understanding")]
        public virtual void RemoveItemFromAgreementTypesList_4()
        {
            this.RemoveItemFromAgreementTypesList("4", "Memorandum of Understanding", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Changing Agreement Type Behavior makes Example combo box read only or editable")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Configure Institutional Agreements Module Agreement Types")]
        public virtual void ChangingAgreementTypeBehaviorMakesExampleComboBoxReadOnlyOrEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Changing Agreement Type Behavior makes Example combo box read only or editable", ((string[])(null)));
#line 198
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 200
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 201
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 202
    testRunner.And("I should see an Agreement Type Behavior radio button labeled \'Allow any text\'");
#line 203
    testRunner.And("I should see an Agreement Type Behavior radio button labeled \'Use specific values" +
                    "\'");
#line 204
    testRunner.And("the Agreement Type Behavior radio button labeled \'Allow any text\' should be check" +
                    "ed");
#line 205
    testRunner.And("I should see an Agreement Type Example text field");
#line 207
    testRunner.When("I check the Agreement Type Behavior radio button labeled \'Use specific values\'");
#line 208
    testRunner.Then("the Agreement Type Example text field should be read only");
#line 210
    testRunner.When("I check the Agreement Type Behavior radio button labeled \'Allow any text\'");
#line 211
    testRunner.Then("the Agreement Type Example text field should not be read only");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
