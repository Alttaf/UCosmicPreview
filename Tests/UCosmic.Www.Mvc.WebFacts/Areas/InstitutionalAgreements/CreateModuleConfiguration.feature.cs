// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.17626
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UCosmic.Www.Mvc.Areas.InstitutionalAgreements
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CreateInitialInstitutionalAgreementsModuleConfigurationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateModuleConfiguration.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Create Initial Institutional Agreements Module Configuration", "  In order to control certain module aspects for my institution\r\n  As an Institut" +
                    "ional Agreement Manager\r\n  I want to create a set of module configuration settin" +
                    "gs that apply to my institution", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Create Initial Institutional Agreements Module Configuration")))
            {
                UCosmic.Www.Mvc.Areas.InstitutionalAgreements.CreateInitialInstitutionalAgreementsModuleConfigurationFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void CreateInitialModuleConfiguration(string browser, string supervisor, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "UsingExampleUnconfiguredInstitutionalAgreementModules"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create initial module configuration", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 9
    testRunner.Given(string.Format("I am using the {0} browser", browser));
#line 10
    testRunner.And(string.Format("I am signed in as {0}", supervisor));
#line 11
    testRunner.And("I am starting from the Institutional Agreement Management page");
#line 12
    testRunner.Then("I should see a \"Configure module\" link");
#line 14
    testRunner.When("I click the \"Configure module\" link");
#line 15
    testRunner.Then("I should see the Institutional Agreement Configure Module page");
#line 16
    testRunner.And("I should see a \"Click here to set it up now\" link");
#line 18
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 19
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 20
    testRunner.And("I should see an \"Add\" link for item #1 in the Agreement Types list");
#line 22
    testRunner.When("I click the \"Add\" link for item #1 in the Agreement Types list");
#line 23
    testRunner.Then("I should see an Agreement Type text field for item #1 in the Agreement Types list" +
                    "");
#line 25
    testRunner.When("I type \"A New Agreement\" into the Agreement Type text field for item #1 in the Ag" +
                    "reement Types list");
#line 26
    testRunner.And("I click the \"Add\" link for item #1 in the Agreement Types list");
#line 27
    testRunner.Then("I should see an item for \"A New Agreement\" in the Agreement Types list");
#line 29
    testRunner.When("I click the \"Create Configuration\" submit button");
#line 30
    testRunner.Then("I should see the Institutional Agreement Management page");
#line 31
    testRunner.And("I should see the flash feedback message \"Module configuration was set up successf" +
                    "ully.\"");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create initial module configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create Initial Institutional Agreements Module Configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsingExampleUnconfiguredInstitutionalAgreementModules")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Supervisor", "supervisor1@lehigh.edu")]
        public virtual void CreateInitialModuleConfiguration_Chrome()
        {
            this.CreateInitialModuleConfiguration("Chrome", "supervisor1@lehigh.edu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create initial module configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create Initial Institutional Agreements Module Configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsingExampleUnconfiguredInstitutionalAgreementModules")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Firefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "Firefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Supervisor", "supervisor1@umn.edu")]
        public virtual void CreateInitialModuleConfiguration_Firefox()
        {
            this.CreateInitialModuleConfiguration("Firefox", "supervisor1@umn.edu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create initial module configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create Initial Institutional Agreements Module Configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsingExampleUnconfiguredInstitutionalAgreementModules")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MSIE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "MSIE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Supervisor", "supervisor1@usil.edu.pe")]
        public virtual void CreateInitialModuleConfiguration_MSIE()
        {
            this.CreateInitialModuleConfiguration("MSIE", "supervisor1@usil.edu.pe", ((string[])(null)));
        }
        
        public virtual void CreateEditAndSaveInitialModuleConfiguration(string browser, string supervisor, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "UsingExampleUnconfiguredInstitutionalAgreementModules"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create, edit, and save initial module configuration", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 42
    testRunner.Given(string.Format("I am using the {0} browser", browser));
#line 43
    testRunner.And(string.Format("I am signed in as {0}", supervisor));
#line 44
    testRunner.And("I am starting from the Institutional Agreement Management page");
#line 45
    testRunner.Then("I should see a \"Configure module\" link");
#line 47
    testRunner.When("I click the \"Configure module\" link");
#line 48
    testRunner.Then("I should see the Institutional Agreement Configure Module page");
#line 49
    testRunner.And("I should see a \"Click here to set it up now\" link");
#line 51
    testRunner.When("I click the \"Click here to set it up now\" link");
#line 52
    testRunner.Then("I should see the Institutional Agreement Set Up Module page");
#line 53
    testRunner.And("I should see an \"Add\" link for item #1 in the Agreement Types list");
#line 55
    testRunner.When("I click the \"Add\" link for item #1 in the Agreement Types list");
#line 56
    testRunner.Then("I should see an Agreement Type text field for item #1 in the Agreement Types list" +
                    "");
#line 58
    testRunner.When("I type \"A New Agreement\" into the Agreement Type text field for item #1 in the Ag" +
                    "reement Types list");
#line 59
    testRunner.And("I click the \"Add\" link for item #1 in the Agreement Types list");
#line 60
    testRunner.Then("I should see an item for \"A New Agreement\" in the Agreement Types list");
#line 62
    testRunner.When("I click the \"Create Configuration\" submit button");
#line 63
    testRunner.Then("I should see the Institutional Agreement Management page");
#line 64
    testRunner.And("I should see the flash feedback message \"Module configuration was set up successf" +
                    "ully.\"");
#line 65
    testRunner.And("I should see a \"Configure module\" link");
#line 67
    testRunner.When("I click the \"Configure module\" link");
#line 68
    testRunner.Then("I should see the Institutional Agreement Configure Module page");
#line 69
    testRunner.And("I should see a \"Remove\" link for item #2 in the Agreement Types list");
#line 71
    testRunner.When("I click the \"Remove\" link for item #2 in the Agreement Types list");
#line 72
    testRunner.Then("I should not see an item for \"A New Agreement\" in the Agreement Types list");
#line 74
    testRunner.When("I click the \"Save Changes\" submit button");
#line 75
    testRunner.Then("I should see the Institutional Agreement Configure Module page");
#line 76
    testRunner.And("I should see the flash feedback message \"Module configuration was saved successfu" +
                    "lly.\"");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create, edit, and save initial module configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create Initial Institutional Agreements Module Configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsingExampleUnconfiguredInstitutionalAgreementModules")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Supervisor", "supervisor1@napier.ac.uk")]
        public virtual void CreateEditAndSaveInitialModuleConfiguration_Chrome()
        {
            this.CreateEditAndSaveInitialModuleConfiguration("Chrome", "supervisor1@napier.ac.uk", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create, edit, and save initial module configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create Initial Institutional Agreements Module Configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsingExampleUnconfiguredInstitutionalAgreementModules")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Firefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "Firefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Supervisor", "supervisor1@suny.edu")]
        public virtual void CreateEditAndSaveInitialModuleConfiguration_Firefox()
        {
            this.CreateEditAndSaveInitialModuleConfiguration("Firefox", "supervisor1@suny.edu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create, edit, and save initial module configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create Initial Institutional Agreements Module Configuration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsingExampleUnconfiguredInstitutionalAgreementModules")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "MSIE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "MSIE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Supervisor", "supervisor1@bjtu.edu.cn")]
        public virtual void CreateEditAndSaveInitialModuleConfiguration_MSIE()
        {
            this.CreateEditAndSaveInitialModuleConfiguration("MSIE", "supervisor1@bjtu.edu.cn", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
