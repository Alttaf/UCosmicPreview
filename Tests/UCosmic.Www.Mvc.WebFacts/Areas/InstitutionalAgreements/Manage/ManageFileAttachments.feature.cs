// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.17379
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UCosmic.Www.Mvc.Areas.InstitutionalAgreements.Manage
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ManageFileAttachmentsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ManageFileAttachments.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Manage File Attachments", "  In order to quickly access copies of signed agreement documents\r\n  As an Instit" +
                    "utional Agreement Manager\r\n  I want to manage a list of File Attachments for eac" +
                    "h agreement", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Manage File Attachments")))
            {
                UCosmic.Www.Mvc.Areas.InstitutionalAgreements.Manage.ManageFileAttachmentsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 8
    testRunner.Given("I am signed in as manager1@uc.edu");
#line 9
    testRunner.And("I am starting from the Institutional Agreement Management page");
#line hidden
        }
        
        public virtual void DisplayFileAttachmentsUploadField(string addOrEdit, string linkText, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Display File Attachments upload field", exampleTags);
#line 11
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 13
    testRunner.When(string.Format("I click the \"{0}\" link", linkText));
#line 14
    testRunner.Then(string.Format("I should see the Institutional Agreement {0} page", addOrEdit));
#line 15
    testRunner.And("I should see a File Attachments upload field");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Display File Attachments upload field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        public virtual void DisplayFileAttachmentsUploadField_Add()
        {
            this.DisplayFileAttachmentsUploadField("Add", "Add a new agreement", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Display File Attachments upload field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        public virtual void DisplayFileAttachmentsUploadField_Edit()
        {
            this.DisplayFileAttachmentsUploadField("Edit", "Agreement, UC 01 test", ((string[])(null)));
        }
        
        public virtual void FailToAddFileAttachmentWhenFileTypeIsInvalid(string addOrEdit, string linkText, string filePath, string fileName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NotInChrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fail to add File Attachment when file type is invalid", @__tags);
#line 23
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 25
    testRunner.When(string.Format("I click the \"{0}\" link", linkText));
#line 26
    testRunner.Then(string.Format("I should see the Institutional Agreement {0} page", addOrEdit));
#line 27
    testRunner.And("I should see a File Attachments upload field");
#line 29
    testRunner.When(string.Format("I choose the file \"{0}\" for the File Attachments upload field", filePath));
#line 30
    testRunner.Then(string.Format("I should not see an item for \"{0}\" in the File Attachments list", fileName));
#line 31
    testRunner.And("I should see the Invalid error message for the File Attachments upload field");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Fail to add File Attachment when file type is invalid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\JavaScriptFile1.js")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "JavaScriptFile1.js")]
        public virtual void FailToAddFileAttachmentWhenFileTypeIsInvalid_Variant0()
        {
            this.FailToAddFileAttachmentWhenFileTypeIsInvalid("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\JavaScriptFile1.js", "JavaScriptFile1.js", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Fail to add File Attachment when file type is invalid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\VbScriptFile1.vb")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "VbScriptFile1.vb")]
        public virtual void FailToAddFileAttachmentWhenFileTypeIsInvalid_Variant1()
        {
            this.FailToAddFileAttachmentWhenFileTypeIsInvalid("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\VbScriptFile1.vb", "VbScriptFile1.vb", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Fail to add File Attachment when file type is invalid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\ExtensionlessFile1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "ExtensionlessFile1")]
        public virtual void FailToAddFileAttachmentWhenFileTypeIsInvalid_Variant2()
        {
            this.FailToAddFileAttachmentWhenFileTypeIsInvalid("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\ExtensionlessFile1", "ExtensionlessFile1", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Fail to add File Attachment when file type is invalid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\JavaScriptFile1.js")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "JavaScriptFile1.js")]
        public virtual void FailToAddFileAttachmentWhenFileTypeIsInvalid_Variant3()
        {
            this.FailToAddFileAttachmentWhenFileTypeIsInvalid("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\JavaScriptFile1.js", "JavaScriptFile1.js", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Fail to add File Attachment when file type is invalid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\VbScriptFile1.vb")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "VbScriptFile1.vb")]
        public virtual void FailToAddFileAttachmentWhenFileTypeIsInvalid_Variant4()
        {
            this.FailToAddFileAttachmentWhenFileTypeIsInvalid("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\VbScriptFile1.vb", "VbScriptFile1.vb", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Fail to add File Attachment when file type is invalid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\ExtensionlessFile1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "ExtensionlessFile1")]
        public virtual void FailToAddFileAttachmentWhenFileTypeIsInvalid_Variant5()
        {
            this.FailToAddFileAttachmentWhenFileTypeIsInvalid("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\ExtensionlessFile1", "ExtensionlessFile1", ((string[])(null)));
        }
        
        public virtual void AddFileAttachmentWithValidExtensionToList(string addOrEdit, string linkText, string filePath, string fileName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NotInChrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add File Attachment with valid extension to list", @__tags);
#line 43
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 45
    testRunner.When(string.Format("I click the \"{0}\" link", linkText));
#line 46
    testRunner.Then(string.Format("I should see the Institutional Agreement {0} page", addOrEdit));
#line 47
    testRunner.And("I should see a File Attachments upload field");
#line 49
    testRunner.When(string.Format("I choose the file \"{0}\" for the File Attachments upload field", filePath));
#line 50
    testRunner.Then(string.Format("I should see an item for \"{0}\" in the File Attachments list", fileName));
#line 51
    testRunner.And("I should not see the Invalid error message for the File Attachments upload field");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\SpecFlow Guide.pdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "SpecFlow Guide.pdf")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant0()
        {
            this.AddFileAttachmentWithValidExtensionToList("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\SpecFlow Guide.pdf", "SpecFlow Guide.pdf", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\WordDocument1.doc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "WordDocument1.doc")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant1()
        {
            this.AddFileAttachmentWithValidExtensionToList("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\WordDocument1.doc", "WordDocument1.doc", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\WordDocument1.docx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "WordDocument1.docx")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant2()
        {
            this.AddFileAttachmentWithValidExtensionToList("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\WordDocument1.docx", "WordDocument1.docx", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\OpenDocument1.odt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "OpenDocument1.odt")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant3()
        {
            this.AddFileAttachmentWithValidExtensionToList("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\OpenDocument1.odt", "OpenDocument1.odt", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\ExcelWorkbook1.xls")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "ExcelWorkbook1.xls")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant4()
        {
            this.AddFileAttachmentWithValidExtensionToList("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\ExcelWorkbook1.xls", "ExcelWorkbook1.xls", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\ExcelWorkbook1.xlsx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "ExcelWorkbook1.xlsx")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant5()
        {
            this.AddFileAttachmentWithValidExtensionToList("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\ExcelWorkbook1.xlsx", "ExcelWorkbook1.xlsx", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\OpenSpreadsheet1.ods")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "OpenSpreadsheet1.ods")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant6()
        {
            this.AddFileAttachmentWithValidExtensionToList("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\OpenSpreadsheet1.ods", "OpenSpreadsheet1.ods", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\PowerPoint1.ppt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "PowerPoint1.ppt")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant7()
        {
            this.AddFileAttachmentWithValidExtensionToList("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\PowerPoint1.ppt", "PowerPoint1.ppt", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\PowerPoint1.pptx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "PowerPoint1.pptx")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant8()
        {
            this.AddFileAttachmentWithValidExtensionToList("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\PowerPoint1.pptx", "PowerPoint1.pptx", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\SpecFlow Guide.pdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "SpecFlow Guide.pdf")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant9()
        {
            this.AddFileAttachmentWithValidExtensionToList("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\SpecFlow Guide.pdf", "SpecFlow Guide.pdf", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\WordDocument1.doc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "WordDocument1.doc")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant10()
        {
            this.AddFileAttachmentWithValidExtensionToList("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\WordDocument1.doc", "WordDocument1.doc", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\WordDocument1.docx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "WordDocument1.docx")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant11()
        {
            this.AddFileAttachmentWithValidExtensionToList("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\WordDocument1.docx", "WordDocument1.docx", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 12")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\OpenDocument1.odt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "OpenDocument1.odt")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant12()
        {
            this.AddFileAttachmentWithValidExtensionToList("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\OpenDocument1.odt", "OpenDocument1.odt", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\ExcelWorkbook1.xls")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "ExcelWorkbook1.xls")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant13()
        {
            this.AddFileAttachmentWithValidExtensionToList("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\ExcelWorkbook1.xls", "ExcelWorkbook1.xls", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 14")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\ExcelWorkbook1.xlsx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "ExcelWorkbook1.xlsx")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant14()
        {
            this.AddFileAttachmentWithValidExtensionToList("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\ExcelWorkbook1.xlsx", "ExcelWorkbook1.xlsx", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\OpenSpreadsheet1.ods")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "OpenSpreadsheet1.ods")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant15()
        {
            this.AddFileAttachmentWithValidExtensionToList("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\OpenSpreadsheet1.ods", "OpenSpreadsheet1.ods", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\PowerPoint1.ppt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "PowerPoint1.ppt")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant16()
        {
            this.AddFileAttachmentWithValidExtensionToList("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\PowerPoint1.ppt", "PowerPoint1.ppt", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add File Attachment with valid extension to list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 17")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\PowerPoint1.pptx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "PowerPoint1.pptx")]
        public virtual void AddFileAttachmentWithValidExtensionToList_Variant17()
        {
            this.AddFileAttachmentWithValidExtensionToList("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\PowerPoint1.pptx", "PowerPoint1.pptx", ((string[])(null)));
        }
        
        public virtual void RemoveFileAttachmentFromList(string addOrEdit, string linkText, string filePath, string fileName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NotInChrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Remove File Attachment from list", @__tags);
#line 75
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 77
    testRunner.When(string.Format("I click the \"{0}\" link", linkText));
#line 78
    testRunner.Then(string.Format("I should see the Institutional Agreement {0} page", addOrEdit));
#line 79
    testRunner.And("I should see a File Attachments upload field");
#line 81
    testRunner.When(string.Format("I choose the file \"{0}\" for the File Attachments upload field", filePath));
#line 82
    testRunner.Then(string.Format("I should see an item for \"{0}\" in the File Attachments list", fileName));
#line 83
    testRunner.And("I should not see the Invalid error message for the File Attachments upload field");
#line 85
    testRunner.When(string.Format("I click the remove icon for \"{0}\" in the File Attachments list", fileName));
#line 86
    testRunner.Then(string.Format("I should not see an item for \"{0}\" in the File Attachments list", fileName));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Remove File Attachment from list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Add")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Add a new agreement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\LargePdf33.8.pdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "LargePdf33.8.pdf")]
        public virtual void RemoveFileAttachmentFromList_Add()
        {
            this.RemoveFileAttachmentFromList("Add", "Add a new agreement", "C:\\WebDriverFileUploads\\LargePdf33.8.pdf", "LargePdf33.8.pdf", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Remove File Attachment from list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddOrEdit", "Edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LinkText", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\LargePdf33.8.pdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "LargePdf33.8.pdf")]
        public virtual void RemoveFileAttachmentFromList_Edit()
        {
            this.RemoveFileAttachmentFromList("Edit", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\LargePdf33.8.pdf", "LargePdf33.8.pdf", ((string[])(null)));
        }
        
        public virtual void UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage(string browser, string agreementLink, string filePath, string fileName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "UseFreshExampleUcInstitutionalAgreementData"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload File Attachment and display link to it on Public Detail page", @__tags);
#line 94
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 96
    testRunner.Given(string.Format("I am using the {0} browser", browser));
#line 98
    testRunner.When(string.Format("I click the \"{0}\" link", agreementLink));
#line 99
    testRunner.Then("I should see the Institutional Agreement Edit page");
#line 100
    testRunner.And("I should see a File Attachments upload field");
#line 102
    testRunner.When(string.Format("I choose the file \"{0}\" for the File Attachments upload field", filePath));
#line 103
    testRunner.Then(string.Format("I should see an item for \"{0}\" in the File Attachments list", fileName));
#line 104
    testRunner.And("I should not see the Invalid error message for the File Attachments upload field");
#line 106
    testRunner.When("I click the \"Save Changes\" submit button");
#line 107
    testRunner.Then("I should see the Public Institutional Agreement Detail page within 30 seconds");
#line 108
    testRunner.And(string.Format("I should see a \"{0}\" link", fileName));
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Upload File Attachment and display link to it on Public Detail page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UseFreshExampleUcInstitutionalAgreementData")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "Firefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AgreementLink", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\SpecFlow Guide.pdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "SpecFlow Guide.pdf")]
        public virtual void UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage_Variant0()
        {
            this.UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage("Firefox", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\SpecFlow Guide.pdf", "SpecFlow Guide.pdf", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Upload File Attachment and display link to it on Public Detail page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UseFreshExampleUcInstitutionalAgreementData")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "Firefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AgreementLink", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\WordDocument1.doc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "WordDocument1.doc")]
        public virtual void UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage_Variant1()
        {
            this.UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage("Firefox", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\WordDocument1.doc", "WordDocument1.doc", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Upload File Attachment and display link to it on Public Detail page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UseFreshExampleUcInstitutionalAgreementData")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "Firefox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AgreementLink", "Agreement, UC 01 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\WordDocument1.docx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "WordDocument1.docx")]
        public virtual void UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage_Variant2()
        {
            this.UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage("Firefox", "Agreement, UC 01 test", "C:\\WebDriverFileUploads\\WordDocument1.docx", "WordDocument1.docx", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Upload File Attachment and display link to it on Public Detail page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UseFreshExampleUcInstitutionalAgreementData")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "MSIE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AgreementLink", "Agreement, UC 02 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\SpecFlow Guide.pdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "SpecFlow Guide.pdf")]
        public virtual void UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage_Variant3()
        {
            this.UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage("MSIE", "Agreement, UC 02 test", "C:\\WebDriverFileUploads\\SpecFlow Guide.pdf", "SpecFlow Guide.pdf", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Upload File Attachment and display link to it on Public Detail page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UseFreshExampleUcInstitutionalAgreementData")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "MSIE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AgreementLink", "Agreement, UC 02 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\WordDocument1.doc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "WordDocument1.doc")]
        public virtual void UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage_Variant4()
        {
            this.UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage("MSIE", "Agreement, UC 02 test", "C:\\WebDriverFileUploads\\WordDocument1.doc", "WordDocument1.doc", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Upload File Attachment and display link to it on Public Detail page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UseFreshExampleUcInstitutionalAgreementData")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "MSIE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AgreementLink", "Agreement, UC 02 test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\WordDocument1.docx")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "WordDocument1.docx")]
        public virtual void UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage_Variant5()
        {
            this.UploadFileAttachmentAndDisplayLinkToItOnPublicDetailPage("MSIE", "Agreement, UC 02 test", "C:\\WebDriverFileUploads\\WordDocument1.docx", "WordDocument1.docx", ((string[])(null)));
        }
        
        public virtual void FailToUploadFileAttachmentOver25MegabytesInSize(string filePath, string fileName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NotInChrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fail to upload File attachment over 25 megabytes in size", @__tags);
#line 120
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 122
    testRunner.When("I click the \"Agreement, UC 01 test\" link");
#line 123
    testRunner.Then("I should see the Institutional Agreement Edit page");
#line 124
    testRunner.And("I should see a File Attachments upload field");
#line 126
    testRunner.When(string.Format("I choose the file \"{0}\" for the File Attachments upload field", filePath));
#line 127
    testRunner.Then(string.Format("I should see an item for \"{0}\" in the File Attachments list", fileName));
#line 129
    testRunner.When("I click the \"Save Changes\" submit button");
#line 130
    testRunner.Then("I should see the File Upload Too Large page within 60 seconds");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Fail to upload File attachment over 25 megabytes in size")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manage File Attachments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NotInChrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "C:\\WebDriverFileUploads\\LargePdf33.8.pdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\WebDriverFileUploads\\LargePdf33.8.pdf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "LargePdf33.8.pdf")]
        public virtual void FailToUploadFileAttachmentOver25MegabytesInSize_CWebDriverFileUploadsLargePdf33_8_Pdf()
        {
            this.FailToUploadFileAttachmentOver25MegabytesInSize("C:\\WebDriverFileUploads\\LargePdf33.8.pdf", "LargePdf33.8.pdf", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
