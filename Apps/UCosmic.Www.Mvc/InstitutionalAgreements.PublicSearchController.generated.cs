// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace UCosmic.Www.Mvc.Areas.InstitutionalAgreements.Controllers {
    public partial class PublicSearchController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PublicSearchController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ChangeOwner() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ChangeOwner);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Index() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Info() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Info);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DisplayFile() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DisplayFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DownloadFile() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DownloadFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult AutoCompleteKeyword() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.AutoCompleteKeyword);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetChildEstablishmentsWithAgreements() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetChildEstablishmentsWithAgreements);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PublicSearchController Actions { get { return MVC.InstitutionalAgreements.PublicSearch; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "InstitutionalAgreements";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "PublicSearch";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "PublicSearch";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string ChangeOwner = "ChangeOwner";
            public readonly string Index = "Index";
            public readonly string Info = "Info";
            public readonly string DisplayFile = "display-file";
            public readonly string DownloadFile = "download-file";
            public readonly string AutoCompleteKeyword = "AutoCompleteKeyword";
            public readonly string GetChildEstablishmentsWithAgreements = "GetChildEstablishmentsWithAgreements";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants {
            public const string ChangeOwner = "ChangeOwner";
            public const string Index = "Index";
            public const string Info = "Info";
            public const string DisplayFile = "display-file";
            public const string DownloadFile = "download-file";
            public const string AutoCompleteKeyword = "AutoCompleteKeyword";
            public const string GetChildEstablishmentsWithAgreements = "GetChildEstablishmentsWithAgreements";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _no_context = "~/Areas/InstitutionalAgreements/Views/PublicSearch/_no-context.cshtml";
            public readonly string css = "~/Areas/InstitutionalAgreements/Views/PublicSearch/css.cshtml";
            public readonly string index = "~/Areas/InstitutionalAgreements/Views/PublicSearch/index.cshtml";
            public readonly string info = "~/Areas/InstitutionalAgreements/Views/PublicSearch/info.cshtml";
            public readonly string no_context = "~/Areas/InstitutionalAgreements/Views/PublicSearch/no-context.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_PublicSearchController: UCosmic.Www.Mvc.Areas.InstitutionalAgreements.Controllers.PublicSearchController {
        public T4MVC_PublicSearchController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult ChangeOwner(string establishmentUrl, string keyword) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangeOwner);
            callInfo.RouteValueDictionary.Add("establishmentUrl", establishmentUrl);
            callInfo.RouteValueDictionary.Add("keyword", keyword);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Index(string establishmentUrl, string keyword) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            callInfo.RouteValueDictionary.Add("establishmentUrl", establishmentUrl);
            callInfo.RouteValueDictionary.Add("keyword", keyword);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Info(System.Guid agreementId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Info);
            callInfo.RouteValueDictionary.Add("agreementId", agreementId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DisplayFile(System.Guid fileId, string fileName) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DisplayFile);
            callInfo.RouteValueDictionary.Add("fileId", fileId);
            callInfo.RouteValueDictionary.Add("fileName", fileName);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DownloadFile(System.Guid fileId, string fileName) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DownloadFile);
            callInfo.RouteValueDictionary.Add("fileId", fileId);
            callInfo.RouteValueDictionary.Add("fileName", fileName);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult AutoCompleteKeyword(string establishmentUrl, string term) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.AutoCompleteKeyword);
            callInfo.RouteValueDictionary.Add("establishmentUrl", establishmentUrl);
            callInfo.RouteValueDictionary.Add("term", term);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetChildEstablishmentsWithAgreements(System.Guid parentId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetChildEstablishmentsWithAgreements);
            callInfo.RouteValueDictionary.Add("parentId", parentId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
